// This is your Prisma schema file,
// learn more about it in the docs: (link unavailable)

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: (link unavailable)

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  name          String
  email         String    @unique
  username      String     @unique
  password      String
  imageUrl      String
  accounts      Account[]
  
}

model Account {
  id             String   @id @default(cuid())
  userId         User   @relation(fields: [id], references: [id])
  type           String   //(e.g. Facebook, Twitter, Instagram)
  username       String
  accessToken    String
  refreshToken   String
  expiresAt      DateTime
  content       Content[]
  analytics     Analytics[]
  profile       Profile?
}
//social media profile
model Profile {
  id          String   @id @default(cuid())
  accountId   Account   @relation(fields: [id], references: [id])
  username    String
  email       String
  avatar      String
  bio         String
}

model Content {
  id       String   @id @default(cuid())
  accountId Account   @relation(fields: [id], references: [id])
  type     String   //(e.g. post, image, video)
  text     String
  media     String
  postedAt DateTime @default(now())
  engagement Engagement[]

}

model Engagement {
  id       String   @id @default(cuid())
  contentId Content   @relation(fields: [id], references: [id])
  type     String   //(e.g. like, comment, share)
  count    Int
}

model Analytics {
  id       String   @id @default(cuid())
  accountId Account   @relation(fields: [id], references: [id])
  metric    String   //(e.g. followerGrowth, engagementRate)
  value     Float
  timestamp DateTime @default(now())
}

// model Team {
//   id       String   @id @default(cuid())
//   name     String
//   users    User[]
//   accounts Account[]
// }

// model UserRole {
//   id       String   @id @default(cuid())
//   userId   User   @relation(fields: [id], references: [id])
//   role     String   //(e.g. admin, member)
// }

// model Notification {
//   id       String   @id @default(cuid())
//   userId   User   @relation(fields: [id], references: [id])
//   type     String   //(e.g. mention, message, comment)
//   message  String
//   readAt   DateTime
// }

// model SocialListening {
//   id       String   @id @default(cuid())
//   accountId User   @relation(fields: [id], references: [id])
//   keyword  String
//   mention  String
//   timestamp DateTime @default(now())
// }

// model ContentCalendar {
//   id       String   @id @default(cuid())
//   accountId Account   @relation(fields: [id], references: [id])
//   date     DateTime
//   content  Content
// }